%if S_size == 8
%define OPCODE_PROLOG(op) EXPORT_C OpE1_ %+ op
%else
%define OPCODE_PROLOG(op) EXPORT_C OpE0M %+ M_8bit %+ _ %+ op
%endif



OPCODE_PROLOG(0x04) ; TSB d
 RMW _TSB,Direct
OPCODE_EPILOG

OPCODE_PROLOG(0x06) ; ASL d
 RMW _ASL,Direct
OPCODE_EPILOG

OPCODE_PROLOG(0x14) ; TRB d
 RMW _TRB,Direct
OPCODE_EPILOG

OPCODE_PROLOG(0x16) ; ASL d,x
 RMW _ASL,Direct_Index_X
OPCODE_EPILOG

OPCODE_PROLOG(0x26) ; ROL d
 RMW _ROL,Direct
OPCODE_EPILOG

OPCODE_PROLOG(0x36) ; ROL d,x
 RMW _ROL,Direct_Index_X
OPCODE_EPILOG

OPCODE_PROLOG(0x46) ; LSR d
 RMW _LSR,Direct
OPCODE_EPILOG

OPCODE_PROLOG(0x56) ; LSR d,x
 RMW _LSR,Direct_Index_X
OPCODE_EPILOG

OPCODE_PROLOG(0x64) ; STZ d
 _STZ Direct
OPCODE_EPILOG

OPCODE_PROLOG(0x66) ; ROR d
 RMW _ROR,Direct
OPCODE_EPILOG

OPCODE_PROLOG(0x74) ; STZ d,x
 _STZ Direct_Index_X
OPCODE_EPILOG

OPCODE_PROLOG(0x76) ; ROR d,x
 RMW _ROR,Direct_Index_X
OPCODE_EPILOG

OPCODE_PROLOG(0x81) ; STA (d,x)
 _STA Direct_Indexed_Indirect
OPCODE_EPILOG

OPCODE_PROLOG(0x85) ; STA d
 _STA Direct
OPCODE_EPILOG

OPCODE_PROLOG(0x87) ; STA [d]
 _STA Direct_Indirect_Long
OPCODE_EPILOG

OPCODE_PROLOG(0x92) ; STA (d)
 _STA Direct_Indirect
OPCODE_EPILOG

OPCODE_PROLOG(0x95) ; STA d,x
 _STA Direct_Index_X
OPCODE_EPILOG

OPCODE_PROLOG(0x97) ; STA [d],y
 _STA Direct_Indirect_Indexed_Long
OPCODE_EPILOG

OPCODE_PROLOG(0xC6) ; DEC d
 RMW _DEC_M,Direct
OPCODE_EPILOG

OPCODE_PROLOG(0xD6) ; DEC d,x
 RMW _DEC_M,Direct_Index_X
OPCODE_EPILOG

OPCODE_PROLOG(0xE6) ; INC d
 RMW _INC_M,Direct
OPCODE_EPILOG

OPCODE_PROLOG(0xF6) ; INC d,x
 RMW _INC_M,Direct_Index_X
OPCODE_EPILOG

%undef OPCODE_PROLOG
